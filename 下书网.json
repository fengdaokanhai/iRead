{
    "bookSourceGroup": "Xpath+正则",
    "bookSourceName": "下书网",
    "bookSourceType": "",
    "bookSourceUrl": "https://www.xiashutxt.com",
    "enable": true,
    "httpUserAgent": "",
    "loginUrl": "",
    "ruleBookAuthor": "<js>result.match(/og:novel:author\" content=\"([^\"]+)/)[1]</js>",
    "ruleBookContent": "//*[@class=\"content\"]<js>result.replace(/<script.*?script>/g,'')</js>",
    "ruleBookInfoInit": "",
    "ruleBookKind": "<js>result.match(/og:novel:category\" content=\"([^\"]+)/)[1]</js>",
    "ruleBookLastChapter": "<js>result.match(/og:novel:latest_chapter_name\" content=\"([^\"]+)/)[1]</js>",
    "ruleBookName": "<js>result.match(/og:novel:book_name\" content=\"([^\"]+)/)[1]</js>",
    "ruleBookUrlPattern": "",
    "ruleChapterList": "+<js>\nvar chapters = [];\nvar regex = /href=\"(\\/\\d+\\/read_\\d.html)\"[^>]+>([^<]+)/g;\nvar match;\nwhile ((match = regex.exec(result)) != null) {\n\tchapters.push({ k: match[1], v: match[2] });\n}\nvar getCount = result.match(/href=\"\\/\\d+\\/read_(\\d+).html\">/)[1] - chapters[chapters.length - 1].k.match(/read_(\\d)/)[1];\nif (getCount > 0) {\n\tvar link = 'https://www.xiashutxt.com/api/ajax/zj?id=' + baseUrl.match(/\\d+/)[0] + '&num=' + getCount + '&order=asc';\n\tvar req = java.ajax(link);\n\tregex = /href=\"(\\/\\d+\\/read_\\d+.html)\"[^>]+>([^<]+)/g;\n\twhile ((match = regex.exec(req)) != null) {\n\t\tchapters.push({ k: match[1], v: match[2] });\n\t}\n}\nchapters\n</js>",
    "ruleChapterName": "v",
    "ruleChapterUrl": "",
    "ruleChapterUrlNext": "",
    "ruleContentUrl": "k",
    "ruleContentUrlNext": "",
    "ruleCoverUrl": "<js>result.match(/og:image\" content=\"([^\"]+)/)[1]</js>",
    "ruleFindAuthor": "",
    "ruleFindCoverUrl": "",
    "ruleFindIntroduce": "",
    "ruleFindKind": "",
    "ruleFindLastChapter": "",
    "ruleFindList": "",
    "ruleFindName": "",
    "ruleFindNoteUrl": "",
    "ruleFindUrl": "",
    "ruleIntroduce": "<js>result.match(/og:description\" content=\"([^\"]+)/)[1]</js>",
    "ruleSearchAuthor": "<js>String(result).match(/\"nickname\">([^\\/]+)/)[1].trim()</js>",
    "ruleSearchCoverUrl": "<js>String(result).match(/img\\ssrc=\"([^\"]+)/)[1]</js>",
    "ruleSearchIntroduce": "<js>String(result).match(/\"intro\">(&nbsp;)*([^<]+)/)[2]</js>",
    "ruleSearchKind": "<js>[String(result).match(/\"like-num\"\\s*title=\"([^\"]+)/)[1],String(result).match(/\"cmt-num\"\\s*title=\"([^\"]+)/)[1]]</js>",
    "ruleSearchLastChapter": "<js>String(result).match(/\"chapter\">[^>]+>([^<]+)/)[1]</js>",
    "ruleSearchList": "//*[@id=\"waterfall\"]/div",
    "ruleSearchName": "<js>String(result).match(/《[^>]+>([^<]+)/)[1]</js>",
    "ruleSearchNoteUrl": "<js>'https://www.xiashutxt.com/'+String(result).match(/《[^>]+id=(\\d+)/)[1]+'/'</js>",
    "ruleSearchUrl": "/search.html?searchtype=all&searchkey=searchKey&page=searchPage",
    "serialNumber": 0,
    "weight": 0
  }
